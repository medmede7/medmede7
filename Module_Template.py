#########################################################################################################################
#															#
#	Module Name: 			Template module
#															#
#	Creation date:			26-Nov-2024
#	Revision code:			0.0
#	Creator:			medmede7
#	Description:			this is the template for python module it defines standards and 
#					rules to write python code and element
#															#
#########################################################################################################################
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
#########################################################################################################################
#					--SCRIPTING RULES--								#
#					  ---------------								#
#===============================|===============================|===============================|=======================#
#	Element			|		style		|	example			|	comment		#
#===============================|===============================|===============================|=======================#
#	Module			|	Upper_Snake_Case	|	My_Module.py		|			#
#-------------------------------|-------------------------------|-------------------------------|-----------------------#
#	Class:			|	lower_snake_case	|	class my_class		|			#
#		Attribute:	|	lowerCamelCase		|	myAttribute		|			#
#		Method:		|	UpperCamelCase		|	MyMethod		|			#
#-------------------------------|-------------------------------|-------------------------------|-----------------------#
#	Object			|	lower_snake_case	|	my_object		| same format as class	#
#-------------------------------|-------------------------------|-------------------------------|-----------------------#
#	Function:		|	UpperCamelCase		|	MyFunction		|			#
#-------------------------------|-------------------------------|-------------------------------|-----------------------#
#	Variable:		|	lowerCamelCase		|	myVar			|			#
#-------------------------------|-------------------------------|-------------------------------|-----------------------#
#	Constant:		|	ALL_UPPER_SNAKE_CASE	|	CONST_MY_CONST		|			#
#-------------------------------|-------------------------------|-------------------------------|-----------------------#
#	Global:			|	upper_snake_case	|	Global_My_Global_Var	|			#
#-------------------------------|-------------------------------|-------------------------------|-----------------------#
#	Import alias:		|	lower			|	myalias			|	avoid it	#
#===============================|===============================|===============================|=======================#
#
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
#########################################################################################################################
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#	
#					-- IMPORT SECTION --								#  
#



#########################################################################################################################					
#      					-- CLASS SECTION --								#
#															#
#	========================================================	#	
#			--CLASS my_class--				#
#	Class docString: define the class here
#	
class my_class:

#docString:
"""NAME
	my_class
SYNOPSYS
	my_object = myclass()
DESCRIPTION
	Describe here help for the function
AUTHOR
	name/alias
REPORTING BUGS
	Date - bug description
EXAMPLE
	my_object = myclass
SEE ALSO

"""
#	Attribute
# - define attribute here -
#	
# 	Constructor
	def __init__()
		pass
#	Method
# ' define other method here
#
#			-- END OF CLASS my_class --
#	========================================================	#						
#########################################################################
#															#
#########################################################################################################################
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
#########################################################################################################################
#					-- FUNCTION SECTION --								#

from pathlib import Path 

if __name__=="__main__":
	module = Path(__file__)
	print('module ', module.name, ' start process ', __name__)
	pass
	print('module ', module.name, ' end process ', __name__)
